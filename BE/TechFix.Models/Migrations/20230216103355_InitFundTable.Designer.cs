// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TechFix.EntityModels;

#nullable disable

namespace TechFix.EntityModels.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230216103355_InitFundTable")]
    partial class InitFundTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.HasSequence<int>("FundCodeIncrement")
                .StartsAt(1000001L);

            modelBuilder.HasSequence<int>("ProductCodeIncrement")
                .StartsAt(1000001L);

            modelBuilder.Entity("TechFix.EntityModels.Category", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SearchData")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("79e4da8c-0381-4a27-a046-5ed6311ea3be"),
                            IsDeleted = false,
                            Name = "LCD - Màn hình Laptop"
                        },
                        new
                        {
                            Id = new Guid("7c8ee1a0-b305-4334-8dd5-0d5625e5ed07"),
                            IsDeleted = false,
                            Name = "Màn hình AOC"
                        },
                        new
                        {
                            Id = new Guid("ae8b1fd1-ff68-4bfb-b281-1b07969c0f56"),
                            IsDeleted = false,
                            Name = "Phần mềm diệt virus - win"
                        },
                        new
                        {
                            Id = new Guid("fd61a005-c601-4185-8ce7-eafd72f641ec"),
                            IsDeleted = false,
                            Name = "VGA Laptop"
                        },
                        new
                        {
                            Id = new Guid("f39d9ccf-d1de-4e7e-8d8b-05b0965970e2"),
                            IsDeleted = false,
                            Name = "CPU - Vi xử lý"
                        },
                        new
                        {
                            Id = new Guid("9b5754d1-2ff5-4ada-8958-03b7bccc0892"),
                            IsDeleted = false,
                            Name = "ASUS"
                        },
                        new
                        {
                            Id = new Guid("25d6464e-e58a-426a-984b-ec80e488e4d2"),
                            IsDeleted = false,
                            Name = "ACER"
                        },
                        new
                        {
                            Id = new Guid("75473e28-b7b6-4cff-b5d1-f28022482821"),
                            IsDeleted = false,
                            Name = "TOSHIBA"
                        },
                        new
                        {
                            Id = new Guid("c836b825-4d03-47f0-94f1-0d364617afb3"),
                            IsDeleted = false,
                            Name = "SONY"
                        },
                        new
                        {
                            Id = new Guid("2570127d-f5d3-46b4-9992-3c6e9d556ae5"),
                            IsDeleted = false,
                            Name = "Macbook"
                        },
                        new
                        {
                            Id = new Guid("d0e9142e-261a-4548-ba3b-10eb0f7c7758"),
                            IsDeleted = false,
                            Name = "Keo tản nhiệt"
                        });
                });

            modelBuilder.Entity("TechFix.EntityModels.Fund", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasPrecision(38, 16)
                        .HasColumnType("decimal(38,16)");

                    b.Property<Guid?>("Cashier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdd")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SearchData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("StoreId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StoreId");

                    b.ToTable("Funds");
                });

            modelBuilder.Entity("TechFix.EntityModels.Manufacturer", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SearchData")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Manufacturers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e32e08d8-32d0-49a4-af6d-e9a8b02fa7ae"),
                            IsDeleted = false,
                            Name = "Pioneer"
                        },
                        new
                        {
                            Id = new Guid("3af759e8-b2e0-4b02-96b6-76c5609615f6"),
                            IsDeleted = false,
                            Name = "Colorful"
                        },
                        new
                        {
                            Id = new Guid("8657a192-250f-46f0-addc-0806460b4ea2"),
                            IsDeleted = false,
                            Name = "Pisen"
                        },
                        new
                        {
                            Id = new Guid("70f6af9a-9725-47c5-b9e3-66aecd85e47b"),
                            IsDeleted = false,
                            Name = "Newmen"
                        },
                        new
                        {
                            Id = new Guid("179f6f9c-33d7-4f43-8b36-b9668cba2cca"),
                            IsDeleted = false,
                            Name = "Genius"
                        },
                        new
                        {
                            Id = new Guid("f30a01bd-2a0c-4340-bfdb-6a497aecb648"),
                            IsDeleted = false,
                            Name = "HP"
                        },
                        new
                        {
                            Id = new Guid("242bf112-9304-4e64-a08a-f455cd132043"),
                            IsDeleted = false,
                            Name = "Unitek"
                        },
                        new
                        {
                            Id = new Guid("5834857c-c47f-4995-abd0-9919515d8b35"),
                            IsDeleted = false,
                            Name = "Energizer"
                        },
                        new
                        {
                            Id = new Guid("36aa5768-87aa-4b7a-9fc7-c8066d136c55"),
                            IsDeleted = false,
                            Name = "Western"
                        },
                        new
                        {
                            Id = new Guid("49747ba2-8a30-4bb5-a2a1-49d6580e672a"),
                            IsDeleted = false,
                            Name = "Addlink"
                        },
                        new
                        {
                            Id = new Guid("4ae0a384-443b-4901-85b1-cfa1976cf035"),
                            IsDeleted = false,
                            Name = "Caddy Bay"
                        },
                        new
                        {
                            Id = new Guid("45341e2d-7e0f-45e7-ad84-f361cd69dc41"),
                            IsDeleted = false,
                            Name = "Samsung"
                        },
                        new
                        {
                            Id = new Guid("b9ebb845-7dd3-4522-b2ba-5fc45f0459a0"),
                            IsDeleted = false,
                            Name = "Hoco"
                        },
                        new
                        {
                            Id = new Guid("d6eb32c3-1339-4b15-b6bf-db38a8bb04ee"),
                            IsDeleted = false,
                            Name = "Kingmax"
                        },
                        new
                        {
                            Id = new Guid("18eacb75-8d7f-4833-87d9-97ba3971a46e"),
                            IsDeleted = false,
                            Name = "Kingston"
                        },
                        new
                        {
                            Id = new Guid("151ecbb0-dbe5-4a80-ab56-e443e145b5e0"),
                            IsDeleted = false,
                            Name = "Seagate"
                        });
                });

            modelBuilder.Entity("TechFix.EntityModels.PaymentMethod", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SearchData")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PaymentMethods");
                });

            modelBuilder.Entity("TechFix.EntityModels.Product", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("AllowNegativeSell")
                        .HasColumnType("bit");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValueSql("'SP' + CAST( NEXT VALUE FOR ProductCodeIncrement AS nvarchar(50) ) ");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInventoryTracking")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ManufacturerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MaximumNorm")
                        .HasColumnType("int");

                    b.Property<int>("MinimumNorm")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("OriginalCost")
                        .HasPrecision(38, 16)
                        .HasColumnType("decimal(38,16)");

                    b.Property<Guid?>("ProductConditionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProductUnitId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("SearchData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SellIn")
                        .HasPrecision(38, 16)
                        .HasColumnType("decimal(38,16)");

                    b.Property<decimal>("SellOut")
                        .HasPrecision(38, 16)
                        .HasColumnType("decimal(38,16)");

                    b.Property<Guid?>("StoreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SupplierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Warranty")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("ProductConditionId");

                    b.HasIndex("ProductUnitId");

                    b.HasIndex("StoreId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("df5a5822-8633-4ead-ab1e-3d533ce55912"),
                            AllowNegativeSell = true,
                            Code = "SP0000010",
                            Description = "",
                            IsDeleted = false,
                            IsInventoryTracking = false,
                            ManufacturerId = new Guid("e32e08d8-32d0-49a4-af6d-e9a8b02fa7ae"),
                            MaximumNorm = 10,
                            MinimumNorm = 5,
                            Name = "Áo thun hai lỗ",
                            OriginalCost = 50000m,
                            ProductConditionId = new Guid("9420681a-6d03-45bb-ab59-bd1af9e3054a"),
                            Quantity = 5,
                            SellIn = 50000m,
                            SellOut = 70000m,
                            SupplierId = new Guid("196d3520-8ffd-49e5-b0f1-f88d4b5f1b59"),
                            Warranty = "Bảo hành 6Th"
                        },
                        new
                        {
                            Id = new Guid("71706114-796a-4ba7-b140-9700ed5f7ac6"),
                            AllowNegativeSell = false,
                            Code = "SP0000003",
                            Description = "",
                            IsDeleted = false,
                            IsInventoryTracking = true,
                            ManufacturerId = new Guid("3af759e8-b2e0-4b02-96b6-76c5609615f6"),
                            MaximumNorm = 0,
                            MinimumNorm = 0,
                            Name = "Cáp Pisen USB Type-C 3A 1m",
                            OriginalCost = 90000m,
                            ProductConditionId = new Guid("cb98afde-54ed-416c-a73c-18eef6f0983b"),
                            Quantity = 8,
                            SellIn = 90000m,
                            SellOut = 130000m,
                            SupplierId = new Guid("196d3520-8ffd-49e5-b0f1-f88d4b5f1b59"),
                            Warranty = "06TH"
                        },
                        new
                        {
                            Id = new Guid("63c2c008-c88b-4309-a1a0-9ac9c0991a0d"),
                            AllowNegativeSell = true,
                            Code = "SP0000011",
                            Description = "",
                            IsDeleted = false,
                            IsInventoryTracking = false,
                            ManufacturerId = new Guid("e32e08d8-32d0-49a4-af6d-e9a8b02fa7ae"),
                            MaximumNorm = 0,
                            MinimumNorm = 0,
                            Name = "Sạc dự phòng Pisen Color Power Pro 10000mAh đỏ-đen (Dual USB 1A/2.4A Smart)",
                            OriginalCost = 550000m,
                            ProductConditionId = new Guid("fcdf46b9-c1d6-4664-8ea4-7a1b25ab1875"),
                            Quantity = 0,
                            SellIn = 550000m,
                            SellOut = 650000m,
                            SupplierId = new Guid("196d3520-8ffd-49e5-b0f1-f88d4b5f1b59"),
                            Warranty = "12TH"
                        },
                        new
                        {
                            Id = new Guid("4354d24c-e373-44cf-abae-21e1e7d0065f"),
                            AllowNegativeSell = true,
                            Code = "SP0000022",
                            Description = "",
                            IsDeleted = false,
                            IsInventoryTracking = false,
                            ManufacturerId = new Guid("70f6af9a-9725-47c5-b9e3-66aecd85e47b"),
                            MaximumNorm = 5,
                            MinimumNorm = 3,
                            Name = "Chuột Newmen F300 không dây",
                            OriginalCost = 215000m,
                            ProductConditionId = new Guid("fcdf46b9-c1d6-4664-8ea4-7a1b25ab1875"),
                            Quantity = 3,
                            SellIn = 215000m,
                            SellOut = 270000m,
                            SupplierId = new Guid("196d3520-8ffd-49e5-b0f1-f88d4b5f1b59"),
                            Warranty = "12TH"
                        },
                        new
                        {
                            Id = new Guid("d3180ddb-b2d4-40ef-8e33-8880c66730cf"),
                            AllowNegativeSell = true,
                            Code = "SP0000032",
                            Description = "",
                            IsDeleted = false,
                            IsInventoryTracking = true,
                            ManufacturerId = new Guid("e32e08d8-32d0-49a4-af6d-e9a8b02fa7ae"),
                            MaximumNorm = 5,
                            MinimumNorm = 1,
                            Name = "Caddybay mỏng 9.5mm Laptop",
                            OriginalCost = 35000m,
                            ProductConditionId = new Guid("fcdf46b9-c1d6-4664-8ea4-7a1b25ab1875"),
                            Quantity = 99,
                            SellIn = 35000m,
                            SellOut = 100000m,
                            SupplierId = new Guid("196d3520-8ffd-49e5-b0f1-f88d4b5f1b59"),
                            Warranty = "3TH"
                        },
                        new
                        {
                            Id = new Guid("c7191de0-805c-43c6-9d75-490e0eb11c07"),
                            AllowNegativeSell = false,
                            Code = "SP0000041",
                            Description = "",
                            IsDeleted = true,
                            IsInventoryTracking = false,
                            ManufacturerId = new Guid("e32e08d8-32d0-49a4-af6d-e9a8b02fa7ae"),
                            MaximumNorm = 0,
                            MinimumNorm = 0,
                            Name = "SSD Pioneer APS-SL3N 120GB 2.5in ( Read 520MB/s - Write 400MB/s )",
                            OriginalCost = 440000m,
                            ProductConditionId = new Guid("fcdf46b9-c1d6-4664-8ea4-7a1b25ab1875"),
                            Quantity = 0,
                            SellIn = 440000m,
                            SellOut = 550000m,
                            SupplierId = new Guid("196d3520-8ffd-49e5-b0f1-f88d4b5f1b59"),
                            Warranty = "12TH"
                        });
                });

            modelBuilder.Entity("TechFix.EntityModels.ProductCondition", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SearchData")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductConditions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9420681a-6d03-45bb-ab59-bd1af9e3054a"),
                            IsDeleted = false,
                            Name = "Mới 100%"
                        },
                        new
                        {
                            Id = new Guid("cb98afde-54ed-416c-a73c-18eef6f0983b"),
                            IsDeleted = false,
                            Name = "Mới 99%"
                        },
                        new
                        {
                            Id = new Guid("fcdf46b9-c1d6-4664-8ea4-7a1b25ab1875"),
                            IsDeleted = false,
                            Name = "Mới 98%"
                        },
                        new
                        {
                            Id = new Guid("ba55e427-1ecd-4d44-a27a-a5be26b89fdd"),
                            IsDeleted = false,
                            Name = "Cũ đã qua sửa chữa"
                        },
                        new
                        {
                            Id = new Guid("de2d4f17-b82c-47c0-9a88-a7bae70c8579"),
                            IsDeleted = false,
                            Name = "Outlet"
                        },
                        new
                        {
                            Id = new Guid("f97327e2-d6aa-439f-991a-875460b45284"),
                            IsDeleted = false,
                            Name = "New Outlet"
                        });
                });

            modelBuilder.Entity("TechFix.EntityModels.ProductUnit", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SearchData")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductUnits");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9c3ff1a8-b0e3-4a86-91ed-1039a1ecaa1e"),
                            IsDeleted = false,
                            Name = "Cái"
                        },
                        new
                        {
                            Id = new Guid("85e919af-c4e9-468a-bba6-5fc700140bf9"),
                            IsDeleted = false,
                            Name = "Bộ"
                        },
                        new
                        {
                            Id = new Guid("99937c86-cdc2-45cb-9467-67a438ef78da"),
                            IsDeleted = false,
                            Name = "Con"
                        },
                        new
                        {
                            Id = new Guid("fa6e9900-d978-4f19-9a78-d509e0781b2c"),
                            IsDeleted = false,
                            Name = "Cm"
                        });
                });

            modelBuilder.Entity("TechFix.EntityModels.Store", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SearchData")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Stores");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fbf7d35a-3df1-43ea-a781-e8e327d8cafa"),
                            Address = "",
                            IsDeleted = false,
                            Name = "TechFix",
                            Phone = "0123456778"
                        });
                });

            modelBuilder.Entity("TechFix.EntityModels.Supplier", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("InDebt")
                        .HasPrecision(38, 16)
                        .HasColumnType("decimal(38,16)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SearchData")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("196d3520-8ffd-49e5-b0f1-f88d4b5f1b59"),
                            Address = "",
                            Email = "",
                            InDebt = 0m,
                            IsDeleted = false,
                            Name = "NWH",
                            Note = "",
                            Phone = ""
                        },
                        new
                        {
                            Id = new Guid("33e3338c-7921-480a-89fe-c06eb62f0fd8"),
                            Address = "",
                            Email = "",
                            InDebt = 0m,
                            IsDeleted = false,
                            Name = "CTY PATECH",
                            Note = "",
                            Phone = ""
                        },
                        new
                        {
                            Id = new Guid("aabacf68-91af-4ea3-8402-0e7b77dc2d87"),
                            Address = "",
                            Email = "",
                            InDebt = 0m,
                            IsDeleted = false,
                            Name = "Chỉnh LK",
                            Note = "",
                            Phone = ""
                        },
                        new
                        {
                            Id = new Guid("3a740ebc-e78c-4a99-88b6-77e11dcfd6b7"),
                            Address = "",
                            Email = "",
                            InDebt = 0m,
                            IsDeleted = false,
                            Name = "Tấn Phát LTK",
                            Note = "",
                            Phone = ""
                        },
                        new
                        {
                            Id = new Guid("617fc52b-6b55-4ff7-84e4-002634392f08"),
                            Address = "",
                            Email = "",
                            InDebt = 0m,
                            IsDeleted = false,
                            Name = "Chuẩn LTK",
                            Note = "",
                            Phone = ""
                        },
                        new
                        {
                            Id = new Guid("90f63998-d125-432c-9c2c-dbbfe9f1d486"),
                            Address = "",
                            Email = "",
                            InDebt = 0m,
                            IsDeleted = false,
                            Name = "Duy Tân",
                            Note = "",
                            Phone = ""
                        },
                        new
                        {
                            Id = new Guid("8a72d084-b426-4f64-a653-1705fd2337c4"),
                            Address = "",
                            Email = "",
                            InDebt = 0m,
                            IsDeleted = false,
                            Name = "Hải Việt",
                            Note = "",
                            Phone = ""
                        },
                        new
                        {
                            Id = new Guid("1eb887c6-aac9-4ff5-92a2-209432a5423f"),
                            Address = "",
                            Email = "",
                            InDebt = 0m,
                            IsDeleted = false,
                            Name = "LGT",
                            Note = "",
                            Phone = ""
                        },
                        new
                        {
                            Id = new Guid("b6a6b405-9fd6-4dd3-b1ca-abcbd9e0460b"),
                            Address = "",
                            Email = "",
                            InDebt = 0m,
                            IsDeleted = false,
                            Name = "Huy Phát Kingmater",
                            Note = "",
                            Phone = ""
                        },
                        new
                        {
                            Id = new Guid("f1ac5570-29d0-40bc-ac24-82264e0356fb"),
                            Address = "",
                            Email = "",
                            InDebt = 0m,
                            IsDeleted = false,
                            Name = "Tuấn Hiền",
                            Note = "",
                            Phone = ""
                        },
                        new
                        {
                            Id = new Guid("4d0cb837-4c9b-4441-8f49-9de41bc3780a"),
                            Address = "",
                            Email = "",
                            InDebt = 0m,
                            IsDeleted = false,
                            Name = "Văn Hải",
                            Note = "",
                            Phone = ""
                        },
                        new
                        {
                            Id = new Guid("7947281e-4011-415f-9342-464caa1808f2"),
                            Address = "",
                            Email = "",
                            InDebt = 0m,
                            IsDeleted = false,
                            Name = "Phát Đạt LTK",
                            Note = "",
                            Phone = ""
                        });
                });

            modelBuilder.Entity("TechFix.EntityModels.User", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("BonusPercent")
                        .HasPrecision(38, 16)
                        .HasColumnType("decimal(38,16)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordSalt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SearchData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaffCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("StoreId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TechFix.EntityModels.UserToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ExpiredDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SearchData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Token")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("TechFix.EntityModels.VlinkSequence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("SequenceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("VlinkSequence");
                });

            modelBuilder.Entity("TechFix.EntityModels.Fund", b =>
                {
                    b.HasOne("TechFix.EntityModels.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("TechFix.EntityModels.Product", b =>
                {
                    b.HasOne("TechFix.EntityModels.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("TechFix.EntityModels.Manufacturer", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacturerId");

                    b.HasOne("TechFix.EntityModels.ProductCondition", "ProductCondition")
                        .WithMany()
                        .HasForeignKey("ProductConditionId");

                    b.HasOne("TechFix.EntityModels.ProductUnit", "ProductUnit")
                        .WithMany()
                        .HasForeignKey("ProductUnitId");

                    b.HasOne("TechFix.EntityModels.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId");

                    b.HasOne("TechFix.EntityModels.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.Navigation("Category");

                    b.Navigation("Manufacturer");

                    b.Navigation("ProductCondition");

                    b.Navigation("ProductUnit");

                    b.Navigation("Store");

                    b.Navigation("Supplier");
                });
#pragma warning restore 612, 618
        }
    }
}
