// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TechFix.EntityModels;

#nullable disable

namespace TechFix.EntityModels.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230216032404_AddSequence")]
    partial class AddSequence
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.HasSequence<int>("ProductCodeIncrement", "shared")
                .StartsAt(1000001L);

            modelBuilder.Entity("TechFix.EntityModels.Category", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SearchData")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("52e5ec7f-b043-47c2-9ae4-671b23e03a18"),
                            IsDeleted = false,
                            Name = "LCD - Màn hình Laptop"
                        },
                        new
                        {
                            Id = new Guid("e5a24d18-ea14-47a3-9f23-e6d23de3d8d4"),
                            IsDeleted = false,
                            Name = "Màn hình AOC"
                        },
                        new
                        {
                            Id = new Guid("a92cac7c-e12c-40fe-a7fa-f3aff4bb0098"),
                            IsDeleted = false,
                            Name = "Phần mềm diệt virus - win"
                        },
                        new
                        {
                            Id = new Guid("b4583e79-cf93-4898-b8b0-81f44abf8b56"),
                            IsDeleted = false,
                            Name = "VGA Laptop"
                        },
                        new
                        {
                            Id = new Guid("ab5a48c6-dcec-485c-9dac-91e90464d820"),
                            IsDeleted = false,
                            Name = "CPU - Vi xử lý"
                        },
                        new
                        {
                            Id = new Guid("f508960a-9fed-45b0-8233-fba663175e1d"),
                            IsDeleted = false,
                            Name = "ASUS"
                        },
                        new
                        {
                            Id = new Guid("d5cb304f-1718-4d26-9c4c-3cd260009665"),
                            IsDeleted = false,
                            Name = "ACER"
                        },
                        new
                        {
                            Id = new Guid("38272fb7-47c0-42c8-b31a-98e71c1b5431"),
                            IsDeleted = false,
                            Name = "TOSHIBA"
                        },
                        new
                        {
                            Id = new Guid("0c232060-02b8-494f-950c-407e8c85b92a"),
                            IsDeleted = false,
                            Name = "SONY"
                        },
                        new
                        {
                            Id = new Guid("952001ab-5309-419d-874e-71f1b402c965"),
                            IsDeleted = false,
                            Name = "Macbook"
                        },
                        new
                        {
                            Id = new Guid("64354e96-b6a8-45a2-a36b-14023afc6d21"),
                            IsDeleted = false,
                            Name = "Keo tản nhiệt"
                        });
                });

            modelBuilder.Entity("TechFix.EntityModels.Manufacturer", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SearchData")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Manufacturers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e32e08d8-32d0-49a4-af6d-e9a8b02fa7ae"),
                            IsDeleted = false,
                            Name = "Pioneer"
                        },
                        new
                        {
                            Id = new Guid("3af759e8-b2e0-4b02-96b6-76c5609615f6"),
                            IsDeleted = false,
                            Name = "Colorful"
                        },
                        new
                        {
                            Id = new Guid("8657a192-250f-46f0-addc-0806460b4ea2"),
                            IsDeleted = false,
                            Name = "Pisen"
                        },
                        new
                        {
                            Id = new Guid("70f6af9a-9725-47c5-b9e3-66aecd85e47b"),
                            IsDeleted = false,
                            Name = "Newmen"
                        },
                        new
                        {
                            Id = new Guid("179f6f9c-33d7-4f43-8b36-b9668cba2cca"),
                            IsDeleted = false,
                            Name = "Genius"
                        },
                        new
                        {
                            Id = new Guid("f30a01bd-2a0c-4340-bfdb-6a497aecb648"),
                            IsDeleted = false,
                            Name = "HP"
                        },
                        new
                        {
                            Id = new Guid("242bf112-9304-4e64-a08a-f455cd132043"),
                            IsDeleted = false,
                            Name = "Unitek"
                        },
                        new
                        {
                            Id = new Guid("5834857c-c47f-4995-abd0-9919515d8b35"),
                            IsDeleted = false,
                            Name = "Energizer"
                        },
                        new
                        {
                            Id = new Guid("36aa5768-87aa-4b7a-9fc7-c8066d136c55"),
                            IsDeleted = false,
                            Name = "Western"
                        },
                        new
                        {
                            Id = new Guid("49747ba2-8a30-4bb5-a2a1-49d6580e672a"),
                            IsDeleted = false,
                            Name = "Addlink"
                        },
                        new
                        {
                            Id = new Guid("4ae0a384-443b-4901-85b1-cfa1976cf035"),
                            IsDeleted = false,
                            Name = "Caddy Bay"
                        },
                        new
                        {
                            Id = new Guid("45341e2d-7e0f-45e7-ad84-f361cd69dc41"),
                            IsDeleted = false,
                            Name = "Samsung"
                        },
                        new
                        {
                            Id = new Guid("b9ebb845-7dd3-4522-b2ba-5fc45f0459a0"),
                            IsDeleted = false,
                            Name = "Hoco"
                        },
                        new
                        {
                            Id = new Guid("d6eb32c3-1339-4b15-b6bf-db38a8bb04ee"),
                            IsDeleted = false,
                            Name = "Kingmax"
                        },
                        new
                        {
                            Id = new Guid("18eacb75-8d7f-4833-87d9-97ba3971a46e"),
                            IsDeleted = false,
                            Name = "Kingston"
                        },
                        new
                        {
                            Id = new Guid("151ecbb0-dbe5-4a80-ab56-e443e145b5e0"),
                            IsDeleted = false,
                            Name = "Seagate"
                        });
                });

            modelBuilder.Entity("TechFix.EntityModels.PaymentMethod", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SearchData")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PaymentMethods");
                });

            modelBuilder.Entity("TechFix.EntityModels.Product", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("AllowNegativeSell")
                        .HasColumnType("bit");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValueSql("'SP' + CAST( NEXT VALUE FOR ProductCodeIncrement AS nvarchar(50) ) ");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInventoryTracking")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ManufacturerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MaximumNorm")
                        .HasColumnType("int");

                    b.Property<int>("MinimumNorm")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("OriginalCost")
                        .HasPrecision(38, 16)
                        .HasColumnType("decimal(38,16)");

                    b.Property<Guid?>("ProductConditionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProductUnitId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("SearchData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SellIn")
                        .HasPrecision(38, 16)
                        .HasColumnType("decimal(38,16)");

                    b.Property<decimal>("SellOut")
                        .HasPrecision(38, 16)
                        .HasColumnType("decimal(38,16)");

                    b.Property<Guid?>("StoreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SupplierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Warranty")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("ProductConditionId");

                    b.HasIndex("ProductUnitId");

                    b.HasIndex("StoreId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("92c4108a-d368-49f7-8cdb-924e70139cfe"),
                            AllowNegativeSell = true,
                            Code = "SP0000010",
                            Description = "",
                            IsDeleted = false,
                            IsInventoryTracking = false,
                            ManufacturerId = new Guid("e32e08d8-32d0-49a4-af6d-e9a8b02fa7ae"),
                            MaximumNorm = 10,
                            MinimumNorm = 5,
                            Name = "Áo thun hai lỗ",
                            OriginalCost = 50000m,
                            ProductConditionId = new Guid("9420681a-6d03-45bb-ab59-bd1af9e3054a"),
                            Quantity = 5,
                            SellIn = 50000m,
                            SellOut = 70000m,
                            SupplierId = new Guid("196d3520-8ffd-49e5-b0f1-f88d4b5f1b59"),
                            Warranty = "Bảo hành 6Th"
                        },
                        new
                        {
                            Id = new Guid("35ef2aa5-2139-4791-b973-1e7a876c6fce"),
                            AllowNegativeSell = false,
                            Code = "SP0000003",
                            Description = "",
                            IsDeleted = false,
                            IsInventoryTracking = true,
                            ManufacturerId = new Guid("3af759e8-b2e0-4b02-96b6-76c5609615f6"),
                            MaximumNorm = 0,
                            MinimumNorm = 0,
                            Name = "Cáp Pisen USB Type-C 3A 1m",
                            OriginalCost = 90000m,
                            ProductConditionId = new Guid("cb98afde-54ed-416c-a73c-18eef6f0983b"),
                            Quantity = 8,
                            SellIn = 90000m,
                            SellOut = 130000m,
                            SupplierId = new Guid("196d3520-8ffd-49e5-b0f1-f88d4b5f1b59"),
                            Warranty = "06TH"
                        },
                        new
                        {
                            Id = new Guid("dabf6634-1256-440f-ba7d-e49db3ced6bd"),
                            AllowNegativeSell = true,
                            Code = "SP0000011",
                            Description = "",
                            IsDeleted = false,
                            IsInventoryTracking = false,
                            ManufacturerId = new Guid("e32e08d8-32d0-49a4-af6d-e9a8b02fa7ae"),
                            MaximumNorm = 0,
                            MinimumNorm = 0,
                            Name = "Sạc dự phòng Pisen Color Power Pro 10000mAh đỏ-đen (Dual USB 1A/2.4A Smart)",
                            OriginalCost = 550000m,
                            ProductConditionId = new Guid("fcdf46b9-c1d6-4664-8ea4-7a1b25ab1875"),
                            Quantity = 0,
                            SellIn = 550000m,
                            SellOut = 650000m,
                            SupplierId = new Guid("196d3520-8ffd-49e5-b0f1-f88d4b5f1b59"),
                            Warranty = "12TH"
                        },
                        new
                        {
                            Id = new Guid("46200b4b-6610-4313-a75e-42e866c84c6d"),
                            AllowNegativeSell = true,
                            Code = "SP0000022",
                            Description = "",
                            IsDeleted = false,
                            IsInventoryTracking = false,
                            ManufacturerId = new Guid("70f6af9a-9725-47c5-b9e3-66aecd85e47b"),
                            MaximumNorm = 5,
                            MinimumNorm = 3,
                            Name = "Chuột Newmen F300 không dây",
                            OriginalCost = 215000m,
                            ProductConditionId = new Guid("fcdf46b9-c1d6-4664-8ea4-7a1b25ab1875"),
                            Quantity = 3,
                            SellIn = 215000m,
                            SellOut = 270000m,
                            SupplierId = new Guid("196d3520-8ffd-49e5-b0f1-f88d4b5f1b59"),
                            Warranty = "12TH"
                        },
                        new
                        {
                            Id = new Guid("800b4e2c-90fc-4018-ab24-db49744ce34c"),
                            AllowNegativeSell = true,
                            Code = "SP0000032",
                            Description = "",
                            IsDeleted = false,
                            IsInventoryTracking = true,
                            ManufacturerId = new Guid("e32e08d8-32d0-49a4-af6d-e9a8b02fa7ae"),
                            MaximumNorm = 5,
                            MinimumNorm = 1,
                            Name = "Caddybay mỏng 9.5mm Laptop",
                            OriginalCost = 35000m,
                            ProductConditionId = new Guid("fcdf46b9-c1d6-4664-8ea4-7a1b25ab1875"),
                            Quantity = 99,
                            SellIn = 35000m,
                            SellOut = 100000m,
                            SupplierId = new Guid("196d3520-8ffd-49e5-b0f1-f88d4b5f1b59"),
                            Warranty = "3TH"
                        },
                        new
                        {
                            Id = new Guid("779f9921-1ea6-4350-ac9c-20b46802fbb0"),
                            AllowNegativeSell = false,
                            Code = "SP0000041",
                            Description = "",
                            IsDeleted = true,
                            IsInventoryTracking = false,
                            ManufacturerId = new Guid("e32e08d8-32d0-49a4-af6d-e9a8b02fa7ae"),
                            MaximumNorm = 0,
                            MinimumNorm = 0,
                            Name = "SSD Pioneer APS-SL3N 120GB 2.5in ( Read 520MB/s - Write 400MB/s )",
                            OriginalCost = 440000m,
                            ProductConditionId = new Guid("fcdf46b9-c1d6-4664-8ea4-7a1b25ab1875"),
                            Quantity = 0,
                            SellIn = 440000m,
                            SellOut = 550000m,
                            SupplierId = new Guid("196d3520-8ffd-49e5-b0f1-f88d4b5f1b59"),
                            Warranty = "12TH"
                        });
                });

            modelBuilder.Entity("TechFix.EntityModels.ProductCondition", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SearchData")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductConditions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9420681a-6d03-45bb-ab59-bd1af9e3054a"),
                            IsDeleted = false,
                            Name = "Mới 100%"
                        },
                        new
                        {
                            Id = new Guid("cb98afde-54ed-416c-a73c-18eef6f0983b"),
                            IsDeleted = false,
                            Name = "Mới 99%"
                        },
                        new
                        {
                            Id = new Guid("fcdf46b9-c1d6-4664-8ea4-7a1b25ab1875"),
                            IsDeleted = false,
                            Name = "Mới 98%"
                        },
                        new
                        {
                            Id = new Guid("ba55e427-1ecd-4d44-a27a-a5be26b89fdd"),
                            IsDeleted = false,
                            Name = "Cũ đã qua sửa chữa"
                        },
                        new
                        {
                            Id = new Guid("de2d4f17-b82c-47c0-9a88-a7bae70c8579"),
                            IsDeleted = false,
                            Name = "Outlet"
                        },
                        new
                        {
                            Id = new Guid("f97327e2-d6aa-439f-991a-875460b45284"),
                            IsDeleted = false,
                            Name = "New Outlet"
                        });
                });

            modelBuilder.Entity("TechFix.EntityModels.ProductUnit", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SearchData")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductUnits");

                    b.HasData(
                        new
                        {
                            Id = new Guid("308738a6-d196-48a6-8ed6-447f897129af"),
                            IsDeleted = false,
                            Name = "Cái"
                        },
                        new
                        {
                            Id = new Guid("b8ec696a-41fb-4d02-94c2-b20279449ab8"),
                            IsDeleted = false,
                            Name = "Bộ"
                        },
                        new
                        {
                            Id = new Guid("5c3b2a61-d8f9-4f22-9670-3523f6f81e53"),
                            IsDeleted = false,
                            Name = "Con"
                        },
                        new
                        {
                            Id = new Guid("e7f0caf6-3727-45fe-8393-455f9243f70e"),
                            IsDeleted = false,
                            Name = "Cm"
                        });
                });

            modelBuilder.Entity("TechFix.EntityModels.Store", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SearchData")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Stores");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c5468d2f-d240-4a23-bbad-d486d88cd2fc"),
                            Address = "",
                            IsDeleted = false,
                            Name = "TechFix",
                            Phone = "0123456778"
                        });
                });

            modelBuilder.Entity("TechFix.EntityModels.Supplier", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("InDebt")
                        .HasPrecision(38, 16)
                        .HasColumnType("decimal(38,16)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SearchData")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("196d3520-8ffd-49e5-b0f1-f88d4b5f1b59"),
                            Address = "",
                            Email = "",
                            InDebt = 0m,
                            IsDeleted = false,
                            Name = "NWH",
                            Note = "",
                            Phone = ""
                        },
                        new
                        {
                            Id = new Guid("33e3338c-7921-480a-89fe-c06eb62f0fd8"),
                            Address = "",
                            Email = "",
                            InDebt = 0m,
                            IsDeleted = false,
                            Name = "CTY PATECH",
                            Note = "",
                            Phone = ""
                        },
                        new
                        {
                            Id = new Guid("aabacf68-91af-4ea3-8402-0e7b77dc2d87"),
                            Address = "",
                            Email = "",
                            InDebt = 0m,
                            IsDeleted = false,
                            Name = "Chỉnh LK",
                            Note = "",
                            Phone = ""
                        },
                        new
                        {
                            Id = new Guid("3666ffc1-19f7-4576-9c8d-fbdd28248db8"),
                            Address = "",
                            Email = "",
                            InDebt = 0m,
                            IsDeleted = false,
                            Name = "Tấn Phát LTK",
                            Note = "",
                            Phone = ""
                        },
                        new
                        {
                            Id = new Guid("7cc3b64b-0dc0-403a-8a0e-1489fe1b8aa1"),
                            Address = "",
                            Email = "",
                            InDebt = 0m,
                            IsDeleted = false,
                            Name = "Chuẩn LTK",
                            Note = "",
                            Phone = ""
                        },
                        new
                        {
                            Id = new Guid("77a2be40-e3f5-4993-941b-98a98fd160d2"),
                            Address = "",
                            Email = "",
                            InDebt = 0m,
                            IsDeleted = false,
                            Name = "Duy Tân",
                            Note = "",
                            Phone = ""
                        },
                        new
                        {
                            Id = new Guid("f95e5adc-211e-44b4-b400-b47582cbdfad"),
                            Address = "",
                            Email = "",
                            InDebt = 0m,
                            IsDeleted = false,
                            Name = "Hải Việt",
                            Note = "",
                            Phone = ""
                        },
                        new
                        {
                            Id = new Guid("dc7d77d0-91e9-42fc-9f3a-c53f8355505a"),
                            Address = "",
                            Email = "",
                            InDebt = 0m,
                            IsDeleted = false,
                            Name = "LGT",
                            Note = "",
                            Phone = ""
                        },
                        new
                        {
                            Id = new Guid("e3999c11-0618-4f61-8c7b-da158aee6bdc"),
                            Address = "",
                            Email = "",
                            InDebt = 0m,
                            IsDeleted = false,
                            Name = "Huy Phát Kingmater",
                            Note = "",
                            Phone = ""
                        },
                        new
                        {
                            Id = new Guid("c4c3778d-6b98-4711-8650-f95ca89a589f"),
                            Address = "",
                            Email = "",
                            InDebt = 0m,
                            IsDeleted = false,
                            Name = "Tuấn Hiền",
                            Note = "",
                            Phone = ""
                        },
                        new
                        {
                            Id = new Guid("8b681064-2cf0-4da2-a171-57ab57eaf142"),
                            Address = "",
                            Email = "",
                            InDebt = 0m,
                            IsDeleted = false,
                            Name = "Văn Hải",
                            Note = "",
                            Phone = ""
                        },
                        new
                        {
                            Id = new Guid("12321a92-c17d-4c8a-b18a-1e71eab793cc"),
                            Address = "",
                            Email = "",
                            InDebt = 0m,
                            IsDeleted = false,
                            Name = "Phát Đạt LTK",
                            Note = "",
                            Phone = ""
                        });
                });

            modelBuilder.Entity("TechFix.EntityModels.User", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("BonusPercent")
                        .HasPrecision(38, 16)
                        .HasColumnType("decimal(38,16)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordSalt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SearchData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaffCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("StoreId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TechFix.EntityModels.UserToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ExpiredDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SearchData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Token")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("TechFix.EntityModels.VlinkSequence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("SequenceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("VlinkSequence");
                });

            modelBuilder.Entity("TechFix.EntityModels.Product", b =>
                {
                    b.HasOne("TechFix.EntityModels.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("TechFix.EntityModels.Manufacturer", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacturerId");

                    b.HasOne("TechFix.EntityModels.ProductCondition", "ProductCondition")
                        .WithMany()
                        .HasForeignKey("ProductConditionId");

                    b.HasOne("TechFix.EntityModels.ProductUnit", "ProductUnit")
                        .WithMany()
                        .HasForeignKey("ProductUnitId");

                    b.HasOne("TechFix.EntityModels.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId");

                    b.HasOne("TechFix.EntityModels.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.Navigation("Category");

                    b.Navigation("Manufacturer");

                    b.Navigation("ProductCondition");

                    b.Navigation("ProductUnit");

                    b.Navigation("Store");

                    b.Navigation("Supplier");
                });
#pragma warning restore 612, 618
        }
    }
}
