// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TechFix.EntityModels;

#nullable disable

namespace TechFix.EntityModels.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230222082834_UpdateTemplateTableInheritBaseModel")]
    partial class UpdateTemplateTableInheritBaseModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.HasSequence<int>("FundCodeIncrement")
                .StartsAt(1000001L);

            modelBuilder.HasSequence<int>("ProductCodeIncrement")
                .StartsAt(1000001L);

            modelBuilder.Entity("TechFix.EntityModels.Category", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SearchData")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9c8fc9f7-25a6-44b2-82fc-e303184449ec"),
                            IsDeleted = false,
                            Name = "LCD - Màn hình Laptop"
                        },
                        new
                        {
                            Id = new Guid("743f02c1-eb00-4f9f-aaa3-b10385c8ae58"),
                            IsDeleted = false,
                            Name = "Màn hình AOC"
                        },
                        new
                        {
                            Id = new Guid("ce403e65-ef53-4a2e-8515-06de75436b9e"),
                            IsDeleted = false,
                            Name = "Phần mềm diệt virus - win"
                        },
                        new
                        {
                            Id = new Guid("7aff1aba-1ca0-42ff-8627-0aa7c2d039af"),
                            IsDeleted = false,
                            Name = "VGA Laptop"
                        },
                        new
                        {
                            Id = new Guid("74d78077-f391-4762-95eb-b29699db7af9"),
                            IsDeleted = false,
                            Name = "CPU - Vi xử lý"
                        },
                        new
                        {
                            Id = new Guid("04e05d4d-a304-4106-91a4-dededd677cd9"),
                            IsDeleted = false,
                            Name = "ASUS"
                        },
                        new
                        {
                            Id = new Guid("4865a6c6-a56d-4f8e-9961-b062af262426"),
                            IsDeleted = false,
                            Name = "ACER"
                        },
                        new
                        {
                            Id = new Guid("e9cf44cb-0410-4470-8f5f-62d0265a4b91"),
                            IsDeleted = false,
                            Name = "TOSHIBA"
                        },
                        new
                        {
                            Id = new Guid("586a934a-a843-4730-aa38-7ad8486959ea"),
                            IsDeleted = false,
                            Name = "SONY"
                        },
                        new
                        {
                            Id = new Guid("7a62c105-e475-4113-a176-b0e283581e12"),
                            IsDeleted = false,
                            Name = "Macbook"
                        },
                        new
                        {
                            Id = new Guid("f7b5685e-acca-435f-9681-2175c0054d77"),
                            IsDeleted = false,
                            Name = "Keo tản nhiệt"
                        });
                });

            modelBuilder.Entity("TechFix.EntityModels.Customer", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fullname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SearchData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Team")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("TechFix.EntityModels.ExportHistory", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasPrecision(38, 16)
                        .HasColumnType("decimal(38,16)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SearchData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ExportHistories");
                });

            modelBuilder.Entity("TechFix.EntityModels.FixProduct", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Adapter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Condition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cpu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ErrorDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EstimatedReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FinishDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("FixStaffId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Hdd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Keyboard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lcd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfTimes")
                        .HasColumnType("int");

                    b.Property<Guid?>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OrderItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Other")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Process")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Psu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Ram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReceiptDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SearchData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalMoney")
                        .HasPrecision(38, 16)
                        .HasColumnType("decimal(38,16)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("WarrantyOrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Wifi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FixStaffId");

                    b.HasIndex("OrderId");

                    b.HasIndex("OrderItemId");

                    b.ToTable("FixProducts");
                });

            modelBuilder.Entity("TechFix.EntityModels.Fund", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasPrecision(38, 16)
                        .HasColumnType("decimal(38,16)");

                    b.Property<Guid?>("Cashier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdd")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SearchData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("StoreId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StoreId");

                    b.ToTable("Funds");
                });

            modelBuilder.Entity("TechFix.EntityModels.ImportHistory", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasPrecision(38, 16)
                        .HasColumnType("decimal(38,16)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SearchData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ImportHistories");
                });

            modelBuilder.Entity("TechFix.EntityModels.IncomeTicket", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasPrecision(38, 16)
                        .HasColumnType("decimal(38,16)");

                    b.Property<Guid?>("CashierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Debt")
                        .HasPrecision(38, 16)
                        .HasColumnType("decimal(38,16)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PaymentTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("SearchData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("StoreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SupplierId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CashierId");

                    b.HasIndex("StoreId");

                    b.HasIndex("SupplierId");

                    b.ToTable("IncomeTickets");
                });

            modelBuilder.Entity("TechFix.EntityModels.InputProduct", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("AmountOwed")
                        .HasPrecision(38, 16)
                        .HasColumnType("decimal(38,16)");

                    b.Property<decimal>("AmountPaid")
                        .HasPrecision(38, 16)
                        .HasColumnType("decimal(38,16)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Discount")
                        .HasPrecision(38, 16)
                        .HasColumnType("decimal(38,16)");

                    b.Property<DateTime>("InputDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PaymentMethodId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SearchData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SupplierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("TotalAmount")
                        .HasPrecision(38, 16)
                        .HasColumnType("decimal(38,16)");

                    b.Property<decimal>("TotalGoodsMoney")
                        .HasPrecision(38, 16)
                        .HasColumnType("decimal(38,16)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PaymentMethodId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("UserId");

                    b.ToTable("InputProducts");
                });

            modelBuilder.Entity("TechFix.EntityModels.InputProductItem", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("InputProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OriginalPrice")
                        .HasColumnType("int");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("SearchData")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InputProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("InputProductItems");
                });

            modelBuilder.Entity("TechFix.EntityModels.Manufacturer", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SearchData")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Manufacturers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e32e08d8-32d0-49a4-af6d-e9a8b02fa7ae"),
                            IsDeleted = false,
                            Name = "Pioneer"
                        },
                        new
                        {
                            Id = new Guid("3af759e8-b2e0-4b02-96b6-76c5609615f6"),
                            IsDeleted = false,
                            Name = "Colorful"
                        },
                        new
                        {
                            Id = new Guid("8657a192-250f-46f0-addc-0806460b4ea2"),
                            IsDeleted = false,
                            Name = "Pisen"
                        },
                        new
                        {
                            Id = new Guid("70f6af9a-9725-47c5-b9e3-66aecd85e47b"),
                            IsDeleted = false,
                            Name = "Newmen"
                        },
                        new
                        {
                            Id = new Guid("179f6f9c-33d7-4f43-8b36-b9668cba2cca"),
                            IsDeleted = false,
                            Name = "Genius"
                        },
                        new
                        {
                            Id = new Guid("f30a01bd-2a0c-4340-bfdb-6a497aecb648"),
                            IsDeleted = false,
                            Name = "HP"
                        },
                        new
                        {
                            Id = new Guid("242bf112-9304-4e64-a08a-f455cd132043"),
                            IsDeleted = false,
                            Name = "Unitek"
                        },
                        new
                        {
                            Id = new Guid("5834857c-c47f-4995-abd0-9919515d8b35"),
                            IsDeleted = false,
                            Name = "Energizer"
                        },
                        new
                        {
                            Id = new Guid("36aa5768-87aa-4b7a-9fc7-c8066d136c55"),
                            IsDeleted = false,
                            Name = "Western"
                        },
                        new
                        {
                            Id = new Guid("49747ba2-8a30-4bb5-a2a1-49d6580e672a"),
                            IsDeleted = false,
                            Name = "Addlink"
                        },
                        new
                        {
                            Id = new Guid("4ae0a384-443b-4901-85b1-cfa1976cf035"),
                            IsDeleted = false,
                            Name = "Caddy Bay"
                        },
                        new
                        {
                            Id = new Guid("45341e2d-7e0f-45e7-ad84-f361cd69dc41"),
                            IsDeleted = false,
                            Name = "Samsung"
                        },
                        new
                        {
                            Id = new Guid("b9ebb845-7dd3-4522-b2ba-5fc45f0459a0"),
                            IsDeleted = false,
                            Name = "Hoco"
                        },
                        new
                        {
                            Id = new Guid("d6eb32c3-1339-4b15-b6bf-db38a8bb04ee"),
                            IsDeleted = false,
                            Name = "Kingmax"
                        },
                        new
                        {
                            Id = new Guid("18eacb75-8d7f-4833-87d9-97ba3971a46e"),
                            IsDeleted = false,
                            Name = "Kingston"
                        },
                        new
                        {
                            Id = new Guid("151ecbb0-dbe5-4a80-ab56-e443e145b5e0"),
                            IsDeleted = false,
                            Name = "Seagate"
                        });
                });

            modelBuilder.Entity("TechFix.EntityModels.Order", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("AmountOwed")
                        .HasPrecision(38, 16)
                        .HasColumnType("decimal(38,16)");

                    b.Property<decimal>("AmountPaid")
                        .HasPrecision(38, 16)
                        .HasColumnType("decimal(38,16)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Discount")
                        .HasPrecision(38, 16)
                        .HasColumnType("decimal(38,16)");

                    b.Property<decimal>("DiscountPerItem")
                        .HasPrecision(38, 16)
                        .HasColumnType("decimal(38,16)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PaymentMethodId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SearchData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SellerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("TotalAmount")
                        .HasPrecision(38, 16)
                        .HasColumnType("decimal(38,16)");

                    b.Property<decimal>("TotalGoodsMoney")
                        .HasPrecision(38, 16)
                        .HasColumnType("decimal(38,16)");

                    b.Property<int>("TotalQuantity")
                        .HasColumnType("int");

                    b.Property<decimal>("Vat")
                        .HasPrecision(38, 16)
                        .HasColumnType("decimal(38,16)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("PaymentMethodId");

                    b.HasIndex("SellerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("TechFix.EntityModels.OrderItem", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasPrecision(38, 16)
                        .HasColumnType("decimal(38,16)");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProductSerial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("SearchData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("WarrantyPeriod")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("TechFix.EntityModels.PaymentMethod", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SearchData")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PaymentMethods");
                });

            modelBuilder.Entity("TechFix.EntityModels.Product", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("AllowNegativeSell")
                        .HasColumnType("bit");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValueSql("'SP' + CAST( NEXT VALUE FOR ProductCodeIncrement AS nvarchar(50) ) ");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Discontinue")
                        .HasColumnType("bit");

                    b.Property<decimal>("FakePrice")
                        .HasPrecision(38, 16)
                        .HasColumnType("decimal(38,16)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInventoryTracking")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ManufacturerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MaximumNorm")
                        .HasColumnType("int");

                    b.Property<int>("MinimumNorm")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("OriginalPrice")
                        .HasPrecision(38, 16)
                        .HasColumnType("decimal(38,16)");

                    b.Property<Guid?>("ProductConditionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProductUnitId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("SearchData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SupplierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Warranty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("WebPrice")
                        .HasPrecision(38, 16)
                        .HasColumnType("decimal(38,16)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("ProductConditionId");

                    b.HasIndex("ProductUnitId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("342798ba-e601-498b-ac36-963df8173c3e"),
                            AllowNegativeSell = true,
                            Code = "SP0000010",
                            Description = "",
                            Discontinue = false,
                            FakePrice = 70000m,
                            IsDeleted = false,
                            IsInventoryTracking = false,
                            ManufacturerId = new Guid("e32e08d8-32d0-49a4-af6d-e9a8b02fa7ae"),
                            MaximumNorm = 10,
                            MinimumNorm = 5,
                            Name = "Áo thun hai lỗ",
                            OriginalPrice = 50000m,
                            ProductConditionId = new Guid("9420681a-6d03-45bb-ab59-bd1af9e3054a"),
                            Quantity = 5,
                            SupplierId = new Guid("196d3520-8ffd-49e5-b0f1-f88d4b5f1b59"),
                            Warranty = "Bảo hành 6Th",
                            WebPrice = 50000m
                        },
                        new
                        {
                            Id = new Guid("b328ddfd-516d-49a3-9fd4-8e0d6354d069"),
                            AllowNegativeSell = false,
                            Code = "SP0000003",
                            Description = "",
                            Discontinue = false,
                            FakePrice = 130000m,
                            IsDeleted = false,
                            IsInventoryTracking = true,
                            ManufacturerId = new Guid("3af759e8-b2e0-4b02-96b6-76c5609615f6"),
                            MaximumNorm = 0,
                            MinimumNorm = 0,
                            Name = "Cáp Pisen USB Type-C 3A 1m",
                            OriginalPrice = 90000m,
                            ProductConditionId = new Guid("cb98afde-54ed-416c-a73c-18eef6f0983b"),
                            Quantity = 8,
                            SupplierId = new Guid("196d3520-8ffd-49e5-b0f1-f88d4b5f1b59"),
                            Warranty = "06TH",
                            WebPrice = 90000m
                        },
                        new
                        {
                            Id = new Guid("29f334ee-2f62-483c-b882-804b5a356dc6"),
                            AllowNegativeSell = true,
                            Code = "SP0000011",
                            Description = "",
                            Discontinue = false,
                            FakePrice = 650000m,
                            IsDeleted = false,
                            IsInventoryTracking = false,
                            ManufacturerId = new Guid("e32e08d8-32d0-49a4-af6d-e9a8b02fa7ae"),
                            MaximumNorm = 0,
                            MinimumNorm = 0,
                            Name = "Sạc dự phòng Pisen Color Power Pro 10000mAh đỏ-đen (Dual USB 1A/2.4A Smart)",
                            OriginalPrice = 550000m,
                            ProductConditionId = new Guid("fcdf46b9-c1d6-4664-8ea4-7a1b25ab1875"),
                            Quantity = 0,
                            SupplierId = new Guid("196d3520-8ffd-49e5-b0f1-f88d4b5f1b59"),
                            Warranty = "12TH",
                            WebPrice = 550000m
                        },
                        new
                        {
                            Id = new Guid("e4f6c2a6-1510-49c6-834d-22b8f518a41e"),
                            AllowNegativeSell = true,
                            Code = "SP0000022",
                            Description = "",
                            Discontinue = false,
                            FakePrice = 270000m,
                            IsDeleted = false,
                            IsInventoryTracking = false,
                            ManufacturerId = new Guid("70f6af9a-9725-47c5-b9e3-66aecd85e47b"),
                            MaximumNorm = 5,
                            MinimumNorm = 3,
                            Name = "Chuột Newmen F300 không dây",
                            OriginalPrice = 215000m,
                            ProductConditionId = new Guid("fcdf46b9-c1d6-4664-8ea4-7a1b25ab1875"),
                            Quantity = 3,
                            SupplierId = new Guid("196d3520-8ffd-49e5-b0f1-f88d4b5f1b59"),
                            Warranty = "12TH",
                            WebPrice = 215000m
                        },
                        new
                        {
                            Id = new Guid("e64c481d-a4fa-45ca-902c-f18fb6f37681"),
                            AllowNegativeSell = true,
                            Code = "SP0000032",
                            Description = "",
                            Discontinue = false,
                            FakePrice = 100000m,
                            IsDeleted = false,
                            IsInventoryTracking = true,
                            ManufacturerId = new Guid("e32e08d8-32d0-49a4-af6d-e9a8b02fa7ae"),
                            MaximumNorm = 5,
                            MinimumNorm = 1,
                            Name = "Caddybay mỏng 9.5mm Laptop",
                            OriginalPrice = 35000m,
                            ProductConditionId = new Guid("fcdf46b9-c1d6-4664-8ea4-7a1b25ab1875"),
                            Quantity = 99,
                            SupplierId = new Guid("196d3520-8ffd-49e5-b0f1-f88d4b5f1b59"),
                            Warranty = "3TH",
                            WebPrice = 35000m
                        },
                        new
                        {
                            Id = new Guid("5624153b-9302-4246-b42f-29bd6a06ec46"),
                            AllowNegativeSell = false,
                            Code = "SP0000041",
                            Description = "",
                            Discontinue = false,
                            FakePrice = 550000m,
                            IsDeleted = true,
                            IsInventoryTracking = false,
                            ManufacturerId = new Guid("e32e08d8-32d0-49a4-af6d-e9a8b02fa7ae"),
                            MaximumNorm = 0,
                            MinimumNorm = 0,
                            Name = "SSD Pioneer APS-SL3N 120GB 2.5in ( Read 520MB/s - Write 400MB/s )",
                            OriginalPrice = 440000m,
                            ProductConditionId = new Guid("fcdf46b9-c1d6-4664-8ea4-7a1b25ab1875"),
                            Quantity = 0,
                            SupplierId = new Guid("196d3520-8ffd-49e5-b0f1-f88d4b5f1b59"),
                            Warranty = "12TH",
                            WebPrice = 440000m
                        });
                });

            modelBuilder.Entity("TechFix.EntityModels.ProductCondition", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SearchData")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductConditions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9420681a-6d03-45bb-ab59-bd1af9e3054a"),
                            IsDeleted = false,
                            Name = "Mới 100%"
                        },
                        new
                        {
                            Id = new Guid("cb98afde-54ed-416c-a73c-18eef6f0983b"),
                            IsDeleted = false,
                            Name = "Mới 99%"
                        },
                        new
                        {
                            Id = new Guid("fcdf46b9-c1d6-4664-8ea4-7a1b25ab1875"),
                            IsDeleted = false,
                            Name = "Mới 98%"
                        },
                        new
                        {
                            Id = new Guid("ba55e427-1ecd-4d44-a27a-a5be26b89fdd"),
                            IsDeleted = false,
                            Name = "Cũ đã qua sửa chữa"
                        },
                        new
                        {
                            Id = new Guid("de2d4f17-b82c-47c0-9a88-a7bae70c8579"),
                            IsDeleted = false,
                            Name = "Outlet"
                        },
                        new
                        {
                            Id = new Guid("f97327e2-d6aa-439f-991a-875460b45284"),
                            IsDeleted = false,
                            Name = "New Outlet"
                        });
                });

            modelBuilder.Entity("TechFix.EntityModels.ProductHistory", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProductStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("SearchData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StoreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Warranty")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StoreId");

                    b.ToTable("ProductHistories");
                });

            modelBuilder.Entity("TechFix.EntityModels.ProductUnit", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SearchData")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductUnits");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7035167e-2ec1-46cb-a346-9f6a20eac535"),
                            IsDeleted = false,
                            Name = "Cái"
                        },
                        new
                        {
                            Id = new Guid("eb4a1712-88ac-4694-8941-5e7305bbc4b1"),
                            IsDeleted = false,
                            Name = "Bộ"
                        },
                        new
                        {
                            Id = new Guid("0a30fca8-bc21-407e-9264-8ea2e5f41575"),
                            IsDeleted = false,
                            Name = "Con"
                        },
                        new
                        {
                            Id = new Guid("92c5a297-4635-46ad-8c9e-b5f28fd44e75"),
                            IsDeleted = false,
                            Name = "Cm"
                        });
                });

            modelBuilder.Entity("TechFix.EntityModels.Store", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SearchData")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Stores");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ea9f5a2d-4d11-45bc-8ec4-ea7b7cd9334b"),
                            Address = "",
                            IsDeleted = false,
                            Name = "TechFix",
                            Phone = "0123456778"
                        });
                });

            modelBuilder.Entity("TechFix.EntityModels.Supplier", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("InDebt")
                        .HasPrecision(38, 16)
                        .HasColumnType("decimal(38,16)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SearchData")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("196d3520-8ffd-49e5-b0f1-f88d4b5f1b59"),
                            Address = "",
                            Email = "",
                            InDebt = 0m,
                            IsDeleted = false,
                            Name = "NWH",
                            Note = "",
                            Phone = ""
                        },
                        new
                        {
                            Id = new Guid("33e3338c-7921-480a-89fe-c06eb62f0fd8"),
                            Address = "",
                            Email = "",
                            InDebt = 0m,
                            IsDeleted = false,
                            Name = "CTY PATECH",
                            Note = "",
                            Phone = ""
                        },
                        new
                        {
                            Id = new Guid("aabacf68-91af-4ea3-8402-0e7b77dc2d87"),
                            Address = "",
                            Email = "",
                            InDebt = 0m,
                            IsDeleted = false,
                            Name = "Chỉnh LK",
                            Note = "",
                            Phone = ""
                        },
                        new
                        {
                            Id = new Guid("e358f54b-bbba-473b-93f4-8308331a3c7d"),
                            Address = "",
                            Email = "",
                            InDebt = 0m,
                            IsDeleted = false,
                            Name = "Tấn Phát LTK",
                            Note = "",
                            Phone = ""
                        },
                        new
                        {
                            Id = new Guid("673aad6d-4b27-4760-95b5-7b1c6cf553bd"),
                            Address = "",
                            Email = "",
                            InDebt = 0m,
                            IsDeleted = false,
                            Name = "Chuẩn LTK",
                            Note = "",
                            Phone = ""
                        },
                        new
                        {
                            Id = new Guid("02f2f867-eab4-4711-8190-ed5e5f0601cf"),
                            Address = "",
                            Email = "",
                            InDebt = 0m,
                            IsDeleted = false,
                            Name = "Duy Tân",
                            Note = "",
                            Phone = ""
                        },
                        new
                        {
                            Id = new Guid("fe0ac497-c6b3-41a4-9242-acb95d075a17"),
                            Address = "",
                            Email = "",
                            InDebt = 0m,
                            IsDeleted = false,
                            Name = "Hải Việt",
                            Note = "",
                            Phone = ""
                        },
                        new
                        {
                            Id = new Guid("f6c5bbd4-701c-43f9-a4fb-df6c887ad0b9"),
                            Address = "",
                            Email = "",
                            InDebt = 0m,
                            IsDeleted = false,
                            Name = "LGT",
                            Note = "",
                            Phone = ""
                        },
                        new
                        {
                            Id = new Guid("a9324c9b-545c-4de3-b4c6-990721e2a130"),
                            Address = "",
                            Email = "",
                            InDebt = 0m,
                            IsDeleted = false,
                            Name = "Huy Phát Kingmater",
                            Note = "",
                            Phone = ""
                        },
                        new
                        {
                            Id = new Guid("51e57f1b-ed47-4fe9-9cdb-3866b0ca4fbb"),
                            Address = "",
                            Email = "",
                            InDebt = 0m,
                            IsDeleted = false,
                            Name = "Tuấn Hiền",
                            Note = "",
                            Phone = ""
                        },
                        new
                        {
                            Id = new Guid("36dcab9b-b6ac-45e3-bd70-0d4dd5cc0973"),
                            Address = "",
                            Email = "",
                            InDebt = 0m,
                            IsDeleted = false,
                            Name = "Văn Hải",
                            Note = "",
                            Phone = ""
                        },
                        new
                        {
                            Id = new Guid("03acff81-9ddd-4cb7-8d7b-de0fc9e51c9e"),
                            Address = "",
                            Email = "",
                            InDebt = 0m,
                            IsDeleted = false,
                            Name = "Phát Đạt LTK",
                            Note = "",
                            Phone = ""
                        });
                });

            modelBuilder.Entity("TechFix.EntityModels.Template", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SearchData")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Templates");
                });

            modelBuilder.Entity("TechFix.EntityModels.User", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("BonusPercent")
                        .HasPrecision(38, 16)
                        .HasColumnType("decimal(38,16)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordSalt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SearchData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaffCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("StoreId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TechFix.EntityModels.UserToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ExpiredDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SearchData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Token")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("TechFix.EntityModels.VlinkSequence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("SequenceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("VlinkSequence");
                });

            modelBuilder.Entity("TechFix.EntityModels.ExportHistory", b =>
                {
                    b.HasOne("TechFix.EntityModels.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TechFix.EntityModels.FixProduct", b =>
                {
                    b.HasOne("TechFix.EntityModels.User", "FixStaff")
                        .WithMany()
                        .HasForeignKey("FixStaffId");

                    b.HasOne("TechFix.EntityModels.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId");

                    b.HasOne("TechFix.EntityModels.OrderItem", null)
                        .WithMany("RepairProducts")
                        .HasForeignKey("OrderItemId");

                    b.Navigation("FixStaff");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("TechFix.EntityModels.Fund", b =>
                {
                    b.HasOne("TechFix.EntityModels.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("TechFix.EntityModels.ImportHistory", b =>
                {
                    b.HasOne("TechFix.EntityModels.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TechFix.EntityModels.IncomeTicket", b =>
                {
                    b.HasOne("TechFix.EntityModels.User", "Cashier")
                        .WithMany()
                        .HasForeignKey("CashierId");

                    b.HasOne("TechFix.EntityModels.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId");

                    b.HasOne("TechFix.EntityModels.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.Navigation("Cashier");

                    b.Navigation("Store");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("TechFix.EntityModels.InputProduct", b =>
                {
                    b.HasOne("TechFix.EntityModels.PaymentMethod", "PaymentMethod")
                        .WithMany()
                        .HasForeignKey("PaymentMethodId");

                    b.HasOne("TechFix.EntityModels.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.HasOne("TechFix.EntityModels.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("PaymentMethod");

                    b.Navigation("Supplier");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TechFix.EntityModels.InputProductItem", b =>
                {
                    b.HasOne("TechFix.EntityModels.InputProduct", "InputProduct")
                        .WithMany("InputProductItems")
                        .HasForeignKey("InputProductId");

                    b.HasOne("TechFix.EntityModels.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.Navigation("InputProduct");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("TechFix.EntityModels.Order", b =>
                {
                    b.HasOne("TechFix.EntityModels.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("TechFix.EntityModels.PaymentMethod", "PaymentMethod")
                        .WithMany()
                        .HasForeignKey("PaymentMethodId");

                    b.HasOne("TechFix.EntityModels.User", "Seller")
                        .WithMany()
                        .HasForeignKey("SellerId");

                    b.Navigation("Customer");

                    b.Navigation("PaymentMethod");

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("TechFix.EntityModels.OrderItem", b =>
                {
                    b.HasOne("TechFix.EntityModels.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId");

                    b.HasOne("TechFix.EntityModels.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("TechFix.EntityModels.Product", b =>
                {
                    b.HasOne("TechFix.EntityModels.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("TechFix.EntityModels.Manufacturer", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacturerId");

                    b.HasOne("TechFix.EntityModels.ProductCondition", "ProductCondition")
                        .WithMany()
                        .HasForeignKey("ProductConditionId");

                    b.HasOne("TechFix.EntityModels.ProductUnit", "ProductUnit")
                        .WithMany()
                        .HasForeignKey("ProductUnitId");

                    b.HasOne("TechFix.EntityModels.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.Navigation("Category");

                    b.Navigation("Manufacturer");

                    b.Navigation("ProductCondition");

                    b.Navigation("ProductUnit");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("TechFix.EntityModels.ProductHistory", b =>
                {
                    b.HasOne("TechFix.EntityModels.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Store");
                });

            modelBuilder.Entity("TechFix.EntityModels.InputProduct", b =>
                {
                    b.Navigation("InputProductItems");
                });

            modelBuilder.Entity("TechFix.EntityModels.OrderItem", b =>
                {
                    b.Navigation("RepairProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
